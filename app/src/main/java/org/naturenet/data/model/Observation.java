package org.naturenet.data.model;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.android.gms.maps.model.LatLng;

import java.util.List;
import java.util.Map;

@JsonAutoDetect(fieldVisibility = JsonAutoDetect.Visibility.ANY,
        getterVisibility = JsonAutoDetect.Visibility.NONE,
        setterVisibility = JsonAutoDetect.Visibility.NONE)
@JsonIgnoreProperties(ignoreUnknown = true)
public class Observation {
//    @Override
//    public String toString() {
//        return "Observation{" +
//                "mId='" + mId + '\'' +
//                ", mProjectInstanceId='" + mProjectInstanceId + '\'' +
//                ", mSubmitterId='" + mSubmitterId + '\'' +
//                ", mGeohash='" + mGeohash + '\'' +
//                ", mData=" + mData +
//                '}';
//    }
//    public static final String NODE_NAME = "observations";
//    private static final int LATITUDE = 0;
//    private static final int LONGITUDE = 1;
//    public Observation() {}
//
//    /**
//     * unique autogenerated-id for the observation
//     */
//    @JsonProperty("id")
//    private String mId;
//    /**
//     * the id of the activity location pair this observation was recorded for
//     */
//    @JsonProperty("activity_location")
//    private String mProjectInstanceId;
//
//    @JsonIgnore
//    private ProjectInstance mProjectInstance = null;
//
//    /**
//     * the id of the user who submitted the observation
//     */
//    @JsonProperty("observer")
//    private String mSubmitterId;
//
//    @JsonIgnore
//    private User mSubmitter;
//
//    /**
//     * the geohash of the location where the observation took place
//     */
//    @JsonProperty("g")
//    private String mGeohash;
//
//    @JsonProperty("l")
//    private List<Double> mCoordinates;
//
//    /**
//     * freeform data submitted as part of the observation
//     */
//    @JsonIgnore
//    private Map<String, Object> mRawData;
//
//    @JsonProperty("data")
//    private PhotoCaptionContent mData;
//
//    /**
//     * comments by other users on the observation, may be null/not present if there are no comments
//     */
//    @JsonProperty("comments")
//    @JsonInclude(JsonInclude.Include.NON_NULL)
//    private Map<String, Object> mRawComments = null;
//
//    @JsonIgnore
//    private List<Comment> mComments = null;
//
//    @JsonProperty("likes")
//    @JsonInclude(JsonInclude.Include.NON_NULL)
//    private Map<String, Object> mRawLikes = null;
//
//    public List<Comment> getComments() {
//        if(mRawComments == null) {
//            return null;
//        }
//        if(mComments != null) {
//            return mComments;
//        }
//
//        //TODO: converter function
//        //Comment.fromRaw(mComments);
//        return mComments;
//    }
//
//    public String getGeohash() {
//        return mGeohash;
//    }
//
//    public LatLng getLocation() {
//        return new LatLng(mCoordinates.get(LATITUDE), mCoordinates.get(LONGITUDE));
//    }
//
//    public PhotoCaptionContent getData() {
//        return mData;
//    }

}
